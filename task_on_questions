1. В раньше думал что слово сотовое приходит от слова единицы измерения сотня. Потом узнал что такое биомикрия: это когда люди копируют животные патерны/называния для применения в технолигиях. То есть "сотовый" это от слова сотка (пчелиная). И вся эта сложная связь напоминает пчелиную сотку, и вот это понятие приходит от сюда. Логотип MegaCom и сам Beeline ссылаются на пчелиный мир.
2. LAC - это Local Area Code само за себя говорит это код региона где находится абонент. CI - может быть Client Identity, так глубоко не разбираюсь, это что то неизвестные протоколы.
3. !(CL кажется Cell Identity)!. Могу погуглить и все узнать, но не сейчас, а после ТЗ.
4. Да, вот это я умею и понимаю, для конвертации числа из 16-ную в 10-ю нужно умножить каждую цифру числа на 16 в степени len(num) - i, и сложить все это -> SUM[num[i] * 16 ^ len(num) - i], 1 <= i <= len(num). если я не ошибаюсь.
5. Знаю: SELECT, INSERT, UPDATE, DELETE, WHERE, JOIN(LEFT, INNER, RIGHT, FULL OUTER) ON, GROUP BY, ORDER BY, COUNT, знаю и понимаю триггеры, но с триггерами нужно попрактиковаться то есть вспомнить.
6. Это время по секундам с какого-то года. Точно не знаю, но думаю что прочитаю сразу вспомню.
7. Вопрос не понял, если вы имеете ввиду A - B то да, могу делать операции над бинарными числами, учитывая особенности типа: INT, SIGNED INT, SHOT INT, ...
8. Python, думаю знаю довольно хорошо, прям до байткодов не трогаю. Знаю основные + популярные библиотеки: os, sys, asyncio, pandas, collections, numpy, sympy, scipy, psycopg, sqlalchemy, ...,(2 года коммерческого опыта). Беру инфу тока через официальную документашку, PyPy, Jython. Короче думаю что смогу написать свой веб-фреймворк. C++ знаю на продакшне не юзаю, только для олимпиадки.
9. Телеграм боты писал, да. Но рабочих нет, да и кода тоже. Пишу на aiogram, очень простая библиотека, то есть максимально абстрагирован.
10. Да, типо RPA делал для своего универа, автоматом создает расписание и генерит xlsx таблицы для каждого курса.
11. Да, вроде просто, тока я путаю GigiByte  GigaByte, один 1000 а другой 1024. Обычно base=1024 как основу. original_byte / (base ** 3), 3 потому что 1024 за КБ еще 1024 за МБ, и еще 1024 за ГБ.
12. Точно не знаю думаю тут в основном занимаются отслеживанием услуг, подсчет стоимости и проводить анализы.
13. Честно скажу, не знаю, но после ТЗ обязательно узнаю. Думаю что это от слова Communicate, то есть не знаю.
14. В книге The art of invisibility (Kevin Mitnick), там одного наркобарона из Австралии нашли через его звонок. Служба безопасности знали его номер или таргетный номер. И через блажащую телевышку/антенну нашли его место положение, то есть когда происходит звонок там в sim карте активизируется сигнал, далее оно усиливается и идет к антенне, то есть это POST запрос на антенну/вышку/сервер и тут в сервере ну так скажем отправляется GET-запрос на таргетный номер. Я так представляю эту связь.
15. Кажется уникальный код, аббревиатуру не знаю, потом по изучаю.
16. Вот это я часто слышу, когда теряешь телефон милиция просит IMEI код от телефона, думаю это ИНН тока для телефонов. его уникальный код.
17. Да, было дело. Обычно я таски беру из раздела issues в GitLab/GitHub, но на Jira особо не работал, но имею опыт. Интуитивно ясно там.
18. Честно говоря будет сложно, можно потыкать интуитивно, но на pandas + seaborn + matplotlib смогу сделать красивые и инсайтовые графики.
19. Нет, могу научиться.
20. Да боле 7 месяцев работал в компании Forecasa [https://www.forecasa.com/]. Компания майнит данные в сфере недвижки, частный сектор короче говоря. Я 60% писал скрейперы для парсинга данных, тестил, проверял данные, мапил, делал пайплайны и DAG и 40% писал фичи для фреймфорка на питончке + postgres. Какие данные я парсил: все что там было, ключевые: стоимость, владелец, документы, адрес, маргиналы.
21. Логика говорит что PostPaid - выплата после услуги, в контексте nur-telecom сложно привести пример, так как вы обычно берете баланс тока после этого предоставляете услугу, а вот услуги от AWS берут после сервиса. PrePaid - это выплата до сервиса, то есть все тарифы по сути PrePaid.
22. Нет, не писал, но имею опыт в написании ТЗ, в универе был клуб DevClub я там тим-лидом в бекенде работал, писал ТЗ, изучал как писать в целом, отлично получалось думаю.
23. Думаю нужно уметь приоритизировать и быть гибким. так что переключатся между задачками нет проблем, я этому научился в олимпиадном программировании. А так конечно лучше завершить 1й таск и перейти на 2й, но как инженер я должен адаптироваться под требования бизнеса и маркета. Нужды клиента на 1м месте.
24. Application Programming Interface, это суп протоколов, его юзают для интеграции для различных компонентов (сервер, микросервис, любой девайс).
25. Обычно на такие вопросы я не даю прямого ответа, на тут я скажу что я буду юзать Python [pandas], да у питона очень мощные тулы для анализа, обработки, плотинга. Можно еще юзать SQL через SQL-запросы решать, так тоже можно. Если реально большие данные которые тока в БД лежат то лучше всего на SQL сделать.

